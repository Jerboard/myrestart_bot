from aiogram.filters import StateFilter
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram.fsm.context import FSMContext

import db
import keyboards as kb
from init import dp, bot, DATE_FORMAT
from utils.cover_photos import get_cover_photo
from utils.data import thanks_questions_text
from enums import DiaryCB, DiaryState


# –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ä—Ç
@dp.callback_query(lambda cb: cb.data.startswith(DiaryCB.DIARY_THANKS_MAIN.value))
async def diary_thanks_main(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    text = (f'<b>–î–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏\n'
            f'–°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞ –∏ —Ç—Ä–µ–≤–æ–≥–∏</b>\n\n'
            f'–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç —á—É–≤—Å—Ç–≤–∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, –Ω–∞–¥–µ–∂–¥—ã, —Å–∏–ª—ã –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ '
            f'–∂–∏–∑–Ω—å—é. –ó–∞–ø–∏—Å–∏ –≤ –î–Ω–µ–≤–Ω–∏–∫–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –ø–æ–º–æ–≥–∞—é—Ç –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞ –∏ —Ç—Ä–µ–≤–æ–≥–∏, –æ–±—É—á–∞—è —Ü–µ–Ω–∏—Ç—å '
            f'–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤ –∂–∏–∑–Ω–∏ –º–æ–º–µ–Ω—Ç—ã –∏ –ª—é–¥–µ–π.')
    photo = InputMediaPhoto (media=get_cover_photo('diary_thanks'), caption=text)
    await cb.message.edit_media (media=photo, reply_markup=kb.get_main_thanks_kb ())


# –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –Ω–∞–ø–∏—Å–∞—Ç—å
@dp.callback_query(lambda cb: cb.data.startswith(DiaryCB.DIARY_THANKS_SEND.value))
async def diary_thanks_main(cb: CallbackQuery, state: FSMContext):
    text = thanks_questions_text [1]
    await state.set_state(DiaryState.SEND_THANKS)
    await state.update_data(data={
        'message_id': cb.message.message_id,
        'step': 1,
        'text': text
    })
    photo = InputMediaPhoto (media=get_cover_photo('diary_thanks'), caption=text)
    await cb.message.edit_media (media=photo, reply_markup=kb.get_back_button ('diary_thanks_main'))


# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
@dp.message(StateFilter(DiaryState.SEND_THANKS))
async def send_thanks(msg: Message, state: FSMContext):
    await msg.delete()
    data = await state.get_data()
    print(data)

    if data['step'] < 3:
        # bottom_text = thanks_questions_text[1]
        bottom_text = ''
    elif data['step'] == 3:
        bottom_text = thanks_questions_text[2]
    elif data['step'] == 4:
        bottom_text = thanks_questions_text[3]
    elif data['step'] == 5:
        bottom_text = thanks_questions_text[4]
    else:
        await state.clear()
        await db.add_thanks(
            user_id=msg.from_user.id,
            thank_1=data['thank_1'],
            thank_2=data['thank_2'],
            thank_3=data['thank_3'],
            thank_4=data['thank_4'],
            thank_5=data['thank_5'],
            thank_6=msg.text,
        )
        bottom_text = '\nüôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç–∞'

    text = (f'{data["text"]}\n'
            f'<i>{msg.text}</i>\n'
            f'{bottom_text}').strip()

    if data['step'] < 6:
        await state.update_data (data={
            'text': text,
            'step': data['step'] + 1,
            f'thank_{data["step"]}': msg.text
        })

    await bot.edit_message_caption(
        chat_id=msg.chat.id,
        message_id=data['message_id'],
        caption=text,
        reply_markup=kb.get_back_button('diary_thanks_main')
    )


# –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.callback_query(lambda cb: cb.data.startswith(DiaryCB.ARCHIVE_THANKS.value))
async def goal_archive(cb: CallbackQuery, state: FSMContext):
    min_date = await db.get_thanks_min_date_user(cb.from_user.id)
    if not min_date:
        text = '–£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ'
        await cb.answer(text, show_alert=True)
    else:
        await state.set_state('search')
        await state.update_data(data={
            'on': 'thanks',
            'message_id': cb.message.message_id
        })

        min_date_str = min_date.strftime(DATE_FORMAT)
        text = (f'–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ–∏—Å–∫ –Ω–∞—á–∏–Ω–∞—è —Å {min_date_str}\n\n'
                f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏ –º–µ—Å—è—Ü')
        photo = InputMediaPhoto (media=get_cover_photo('diary_thanks'), caption=text)
        await cb.message.edit_media (media=photo, reply_markup=kb.get_search_kb ('diary_thanks_main'))


'''
–ó–∞–ø–∏—Å–∞—Ç—å üìù –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫?
–î–∞ / –ù–µ—Ç

–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —Å–µ–±–µ / –º–∏—Ä—É

–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —Å–µ–±–µ 
–ó–∞ —á—Ç–æ —è –±–ª–∞–≥–æ–¥–∞—Ä—é —Å–µ–±—è —Å–µ–≥–æ–¥–Ω—è?
 1. –û—Ç–≤–µ—Ç
 2. –û—Ç–≤–µ—Ç
 3. –û—Ç–≤–µ—Ç

–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å - 1/3
–ó–∞ —á—Ç–æ —è –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω —ç—Ç–æ–º—É –¥–Ω—é?
–û—Ç–≤–µ—Ç
–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å - 2/3
–ö–æ–º—É —è –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –∏–∑ –º–æ–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è?
–û—Ç–≤–µ—Ç
–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å - 3/3
–ó–∞ —á—Ç–æ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –≤ –±—É–¥—É—â–µ–º?
–û—Ç–≤–µ—Ç
'''
